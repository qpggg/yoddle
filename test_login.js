import fetch from 'node-fetch';

const BASE_URL = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
const testCredentials = [
  { login: 'admin@gmail.com', password: 'admin' },
  { login: 'test@gmail.com', password: 'test' }
];

async function testLogin(credentials) {
  try {
    console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –¥–ª—è: ${credentials.login}`);
    
    const response = await fetch(`${BASE_URL}/api/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(credentials)
    });
    
    const data = await response.json();
    
    if (response.ok) {
      console.log(`‚úÖ –£–°–ü–ï–®–ù–´–ô –í–•–û–î –¥–ª—è ${credentials.login}`);
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${data.user.name}`);
      console.log(`   –î–æ–ª–∂–Ω–æ—Å—Ç—å: ${data.user.position}`);
    } else {
      console.log(`‚ùå –û–®–ò–ë–ö–ê –í–•–û–î–ê –¥–ª—è ${credentials.login}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log(`   –û—à–∏–±–∫–∞: ${data.error}`);
    }
  } catch (error) {
    console.log(`üí• –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ø—Ä–∏ –≤—Ö–æ–¥–µ –¥–ª—è ${credentials.login}:`);
    console.log(`   –û—à–∏–±–∫–∞: ${error.message}`);
  }
  console.log('');
}

async function runLoginTests() {
  console.log('üîê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–•–û–î–ê –í –°–ò–°–¢–ï–ú–£\n');
  
  // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  for (const credentials of testCredentials) {
    await testLogin(credentials);
  }
  
  console.log('üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
  console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('- –ï—Å–ª–∏ –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω - —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏');
  console.log('- –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª–µ–π');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runLoginTests().catch(console.error); 