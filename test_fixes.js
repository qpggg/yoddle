import fetch from 'node-fetch';

const BASE_URL = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testUser = {
  login: 'test@example.com',
  password: 'test123'
};

const testActivity = {
  user_id: 1,
  year: 2024,
  month: 12
};

const testProgress = {
  user_id: 1,
  xp_to_add: 50,
  action: 'test_action'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è endpoints
async function testEndpoint(name, url, options = {}) {
  try {
    console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ${name}...`);
    const response = await fetch(url, options);
    const data = await response.json();
    
    if (response.ok) {
      console.log(`‚úÖ ${name}: –£–°–ü–ï–• (${response.status})`);
      console.log(`   –û—Ç–≤–µ—Ç:`, JSON.stringify(data, null, 2).substring(0, 200) + '...');
    } else {
      console.log(`‚ùå ${name}: –û–®–ò–ë–ö–ê (${response.status})`);
      console.log(`   –û—à–∏–±–∫–∞:`, data.error || data);
    }
  } catch (error) {
    console.log(`üí• ${name}: –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï`);
    console.log(`   –û—à–∏–±–∫–∞:`, error.message);
  }
  console.log('');
}

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
async function runTests() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô YODDLE\n');
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
  await testEndpoint('–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω', `${BASE_URL}/api/benefits`);
  
  // –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–∞ (–¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
  await testEndpoint('–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–∞ (–ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ)', `${BASE_URL}/api/login`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ login: '', password: '' })
  });
  
  // –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
  await testEndpoint('–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–±–µ–∑ user_id)', `${BASE_URL}/api/activity`);
  
  // –¢–µ—Å—Ç 4: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
  await testEndpoint('–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)', `${BASE_URL}/api/progress`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ user_id: 'invalid', xp_to_add: -10 })
  });
  
  // –¢–µ—Å—Ç 5: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  await testEndpoint('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)', `${BASE_URL}/api/activity?user_id=1&year=2024&month=12`);
  
  // –¢–µ—Å—Ç 6: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  await testEndpoint('–ü—Ä–æ–≥—Ä–µ—Å—Å (–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)', `${BASE_URL}/api/progress?user_id=1`);
  
  console.log('üéØ –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´');
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('- –ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - —ç—Ç–æ —Ö–æ—Ä–æ—à–æ!');
  console.log('- –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç');
  console.log('- –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –ë–î - –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å SQL —Ñ–∞–π–ª—ã');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests().catch(console.error); 