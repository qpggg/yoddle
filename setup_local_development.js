import { Client } from 'pg';
import fs from 'fs';
import path from 'path';

console.log('üöÄ –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ö–ê–õ–¨–ù–û–ô –†–ê–ó–†–ê–ë–û–¢–ö–ò');
console.log('==================================\n');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
const LOCAL_CONFIG = {
  host: 'localhost',
  port: 5432,
  database: 'postgres', // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ë–î –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—à–µ–π
  user: 'postgres',
  password: '4bd2e9993a6e443a8489c7391d1a23ee' // –ü–∞—Ä–æ–ª—å –∏–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
};

async function setupLocalDatabase() {
  console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î...');
  
  const client = new Client(LOCAL_CONFIG);
  
  try {
    await client.connect();
    
    // –°–æ–∑–¥–∞–µ–º –ë–î –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await client.query(`
      CREATE DATABASE yoddle_dev;
    `);
    
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö yoddle_dev —Å–æ–∑–¥–∞–Ω–∞');
    
    await client.query(`
      CREATE USER yoddle_user WITH PASSWORD 'yoddle123';
    `);
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å yoddle_user —Å–æ–∑–¥–∞–Ω');
    
    await client.query(`
      GRANT ALL PRIVILEGES ON DATABASE yoddle_dev TO yoddle_user;
    `);
    
    console.log('‚úÖ –ü—Ä–∞–≤–∞ –≤—ã–¥–∞–Ω—ã');
    
  } catch (error) {
    if (error.code === '42P04') {
      console.log('‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else if (error.code === '42710') {
      console.log('‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î:', error.message);
      return false;
    }
  } finally {
    await client.end();
  }
  
  return true;
}

async function createTables() {
  console.log('\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
  
  const client = new Client({
    ...LOCAL_CONFIG,
    database: 'yoddle_dev',
    user: 'yoddle_user',
    password: 'yoddle123'
  });
  
  try {
    await client.connect();
    
    // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    const tables = [
      `CREATE TABLE IF NOT EXISTS enter (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255),
        login VARCHAR(255) UNIQUE,
        phone VARCHAR(20),
        position VARCHAR(255),
        avatar_url TEXT,
        password VARCHAR(255)
      );`,
      
      `CREATE TABLE IF NOT EXISTS activity_log (
        id SERIAL PRIMARY KEY,
        user_id INTEGER,
        action VARCHAR(100),
        xp_earned INTEGER DEFAULT 0,
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );`,
      
      `CREATE TABLE IF NOT EXISTS user_progress (
        id SERIAL PRIMARY KEY,
        user_id INTEGER UNIQUE,
        xp INTEGER DEFAULT 0,
        level INTEGER DEFAULT 1,
        login_streak INTEGER DEFAULT 0,
        days_active INTEGER DEFAULT 0,
        benefits_used INTEGER DEFAULT 0,
        profile_completion INTEGER DEFAULT 0,
        last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );`
    ];
    
    for (const table of tables) {
      await client.query(table);
    }
    
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    await client.query(`
      INSERT INTO enter (name, login, phone, position, password) 
      VALUES 
        ('–ú–∏—Ö–∞–∏–ª –ü–æ–ª—à–∫–æ–≤', 'admin@gmail.com', '+7-999-123-45-67', 'CEO', 'admin'),
        ('–ï–ª–µ–Ω–∞', 'test@gmail.com', '+7-999-987-65-43', '–°–µ–∫—Ä–µ—Ç–∞—Ä—å', 'test')
      ON CONFLICT (login) DO NOTHING;
    `);
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü:', error.message);
    return false;
  } finally {
    await client.end();
  }
  
  return true;
}

function updateEnvFile() {
  console.log('\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞...');
  
  const envPath = path.join(process.cwd(), '.env');
  const envContent = `# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
PG_CONNECTION_STRING=postgresql://yoddle_user:yoddle123@localhost:5432/yoddle_dev

# –ü—Ä–æ–¥–∞–∫—à–Ω (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
# PG_CONNECTION_STRING=postgresql://postgres.wbgagyckqpkeemztsgka:22kiKggfEG2haS5x@aws-0-eu-north-1.pooler.supabase.com:5432/postgres
`;
  
  try {
    fs.writeFileSync(envPath, envContent);
    console.log('‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env:', error.message);
    return false;
  }
}

async function main() {
  console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...\n');
  
  const dbCreated = await setupLocalDatabase();
  if (!dbCreated) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ë–î');
    return;
  }
  
  const tablesCreated = await createTables();
  if (!tablesCreated) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã');
    return;
  }
  
  const envUpdated = updateEnvFile();
  if (!envUpdated) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .env');
    return;
  }
  
  console.log('\nüéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
  console.log('========================');
  console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –ë–î —Å–æ–∑–¥–∞–Ω–∞');
  console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('‚úÖ .env –æ–±–Ω–æ–≤–ª–µ–Ω');
  console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
  console.log('   npm run server');
  console.log('   npm run test-simple');
  console.log('\nüìä –û–∂–∏–¥–∞–µ–º–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: 50-100ms!');
}

main().catch(console.error); 