-- üí∞ –û–ë–ù–û–í–õ–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ ENTER –î–õ–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ë–ê–õ–ê–ù–°–ê
-- =====================================================

-- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –±–∞–ª–∞–Ω—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É enter
ALTER TABLE enter ADD COLUMN IF NOT EXISTS balance DECIMAL(10,2) DEFAULT 0.00;
ALTER TABLE enter ADD COLUMN IF NOT EXISTS company_id INTEGER;
ALTER TABLE enter ADD COLUMN IF NOT EXISTS is_admin BOOLEAN DEFAULT false;

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–ª–∞–Ω—Å—É
CREATE INDEX IF NOT EXISTS idx_enter_balance ON enter(balance);
CREATE INDEX IF NOT EXISTS idx_enter_company_id ON enter(company_id);

-- –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
UPDATE enter SET balance = 0.00 WHERE balance IS NULL;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –º–µ–∂–¥—É enter –∏ user_balance
CREATE OR REPLACE FUNCTION sync_balance_with_enter()
RETURNS TRIGGER AS $$
BEGIN
    -- –ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ user_balance, –æ–±–Ω–æ–≤–ª—è–µ–º enter
    IF TG_OP = 'UPDATE' OR TG_OP = 'INSERT' THEN
        UPDATE enter 
        SET balance = NEW.balance 
        WHERE id = NEW.user_id;
        RETURN NEW;
    END IF;
    
    -- –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ user_balance, –æ–±–Ω—É–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ enter
    IF TG_OP = 'DELETE' THEN
        UPDATE enter 
        SET balance = 0.00 
        WHERE id = OLD.user_id;
        RETURN OLD;
    END IF;
    
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
DROP TRIGGER IF EXISTS trigger_sync_balance_enter ON user_balance;
CREATE TRIGGER trigger_sync_balance_enter
    AFTER INSERT OR UPDATE OR DELETE ON user_balance
    FOR EACH ROW
    EXECUTE FUNCTION sync_balance_with_enter();

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION get_user_balance_quick(p_user_id INTEGER)
RETURNS DECIMAL(10,2) AS $$
DECLARE
    user_balance DECIMAL(10,2);
BEGIN
    SELECT balance INTO user_balance 
    FROM enter 
    WHERE id = p_user_id;
    
    RETURN COALESCE(user_balance, 0.00);
END;
$$ LANGUAGE plpgsql;

-- –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
CREATE OR REPLACE VIEW user_info_with_balance AS
SELECT 
    e.id,
    e.name,
    e.login as email,
    e.phone,
    e.position,
    e.avatar_url,
    e.balance,
    e.company_id,
    e.is_admin,
    cp.company_name,
    cp.coins_per_employee
FROM enter e
LEFT JOIN company_plans cp ON e.company_id = cp.id;

-- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ (—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É user_balance –µ—Å–ª–∏ –Ω–µ—Ç)
INSERT INTO user_balance (user_id, balance, total_earned, total_spent)
SELECT 
    id, 
    COALESCE(balance, 0.00), 
    COALESCE(balance, 0.00), 
    0.00
FROM enter 
WHERE id NOT IN (SELECT COALESCE(user_id, 0) FROM user_balance)
ON CONFLICT (user_id) DO NOTHING;

-- –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ enter –∏–∑ user_balance –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
UPDATE enter 
SET balance = ub.balance
FROM user_balance ub 
WHERE enter.id = ub.user_id;

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
COMMENT ON COLUMN enter.balance IS '–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å Yoddle-–∫–æ–∏–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
COMMENT ON COLUMN enter.company_id IS 'ID –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
COMMENT ON COLUMN enter.is_admin IS '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';

SELECT '–¢–∞–±–ª–∏—Ü–∞ enter —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º!' as status;